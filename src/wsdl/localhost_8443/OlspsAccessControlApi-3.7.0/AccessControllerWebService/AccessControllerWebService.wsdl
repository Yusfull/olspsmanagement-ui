<?xml version="1.0" ?><wsdl:definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://olspsaccesscontrolapi.olsps.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" name="AccessControllerWebService" targetNamespace="http://olspsaccesscontrolapi.olsps.com/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://olspsaccesscontrolapi.olsps.com/" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://olspsaccesscontrolapi.olsps.com/">
  <xs:element name="addEntitlement" type="tns:addEntitlement"></xs:element>
  <xs:element name="addEntitlementResponse" type="tns:addEntitlementResponse"></xs:element>
  <xs:element name="addGroup" type="tns:addGroup"></xs:element>
  <xs:element name="addGroupResponse" type="tns:addGroupResponse"></xs:element>
  <xs:element name="addRole" type="tns:addRole"></xs:element>
  <xs:element name="addRoleResponse" type="tns:addRoleResponse"></xs:element>
  <xs:element name="addUser" type="tns:addUser"></xs:element>
  <xs:element name="addUserResponse" type="tns:addUserResponse"></xs:element>
  <xs:element name="addUserToGroup" type="tns:addUserToGroup"></xs:element>
  <xs:element name="addUserToGroupResponse" type="tns:addUserToGroupResponse"></xs:element>
  <xs:element name="assignEntitlementToRole" type="tns:assignEntitlementToRole"></xs:element>
  <xs:element name="assignEntitlementToRoleResponse" type="tns:assignEntitlementToRoleResponse"></xs:element>
  <xs:element name="assignRoleToGroup" type="tns:assignRoleToGroup"></xs:element>
  <xs:element name="assignRoleToGroupResponse" type="tns:assignRoleToGroupResponse"></xs:element>
  <xs:element name="assignRoleToUser" type="tns:assignRoleToUser"></xs:element>
  <xs:element name="assignRoleToUserResponse" type="tns:assignRoleToUserResponse"></xs:element>
  <xs:element name="clearDatabase" type="tns:clearDatabase"></xs:element>
  <xs:element name="clearDatabaseResponse" type="tns:clearDatabaseResponse"></xs:element>
  <xs:element name="deleteEntitlement" type="tns:deleteEntitlement"></xs:element>
  <xs:element name="deleteEntitlementResponse" type="tns:deleteEntitlementResponse"></xs:element>
  <xs:element name="deleteGroup" type="tns:deleteGroup"></xs:element>
  <xs:element name="deleteGroupResponse" type="tns:deleteGroupResponse"></xs:element>
  <xs:element name="deleteRole" type="tns:deleteRole"></xs:element>
  <xs:element name="deleteRoleResponse" type="tns:deleteRoleResponse"></xs:element>
  <xs:element name="deleteUser" type="tns:deleteUser"></xs:element>
  <xs:element name="deleteUserFromGroup" type="tns:deleteUserFromGroup"></xs:element>
  <xs:element name="deleteUserFromGroupResponse" type="tns:deleteUserFromGroupResponse"></xs:element>
  <xs:element name="deleteUserResponse" type="tns:deleteUserResponse"></xs:element>
  <xs:element name="findEntitlements" type="tns:findEntitlements"></xs:element>
  <xs:element name="findEntitlementsResponse" type="tns:findEntitlementsResponse"></xs:element>
  <xs:element name="findGroup" type="tns:findGroup"></xs:element>
  <xs:element name="findGroupNames" type="tns:findGroupNames"></xs:element>
  <xs:element name="findGroupNamesResponse" type="tns:findGroupNamesResponse"></xs:element>
  <xs:element name="findGroupResponse" type="tns:findGroupResponse"></xs:element>
  <xs:element name="findGroups" type="tns:findGroups"></xs:element>
  <xs:element name="findGroupsResponse" type="tns:findGroupsResponse"></xs:element>
  <xs:element name="findLdapUsers" type="tns:findLdapUsers"></xs:element>
  <xs:element name="findLdapUsersResponse" type="tns:findLdapUsersResponse"></xs:element>
  <xs:element name="findRole" type="tns:findRole"></xs:element>
  <xs:element name="findRoleNames" type="tns:findRoleNames"></xs:element>
  <xs:element name="findRoleNamesResponse" type="tns:findRoleNamesResponse"></xs:element>
  <xs:element name="findRoleResponse" type="tns:findRoleResponse"></xs:element>
  <xs:element name="findRoles" type="tns:findRoles"></xs:element>
  <xs:element name="findRolesResponse" type="tns:findRolesResponse"></xs:element>
  <xs:element name="findUser" type="tns:findUser"></xs:element>
  <xs:element name="findUserNames" type="tns:findUserNames"></xs:element>
  <xs:element name="findUserNamesResponse" type="tns:findUserNamesResponse"></xs:element>
  <xs:element name="findUserResponse" type="tns:findUserResponse"></xs:element>
  <xs:element name="findUsers" type="tns:findUsers"></xs:element>
  <xs:element name="findUsersResponse" type="tns:findUsersResponse"></xs:element>
  <xs:element name="getEntitlementsAssignedToRole" type="tns:getEntitlementsAssignedToRole"></xs:element>
  <xs:element name="getEntitlementsAssignedToRoleResponse" type="tns:getEntitlementsAssignedToRoleResponse"></xs:element>
  <xs:element name="getEntitlementsEffectivelyAssignedToUser" type="tns:getEntitlementsEffectivelyAssignedToUser"></xs:element>
  <xs:element name="getEntitlementsEffectivelyAssignedToUserResponse" type="tns:getEntitlementsEffectivelyAssignedToUserResponse"></xs:element>
  <xs:element name="getGroupsContainingUser" type="tns:getGroupsContainingUser"></xs:element>
  <xs:element name="getGroupsContainingUserResponse" type="tns:getGroupsContainingUserResponse"></xs:element>
  <xs:element name="getPasswordCypher" type="tns:getPasswordCypher"></xs:element>
  <xs:element name="getPasswordCypherResponse" type="tns:getPasswordCypherResponse"></xs:element>
  <xs:element name="getRolesAssignedToGroup" type="tns:getRolesAssignedToGroup"></xs:element>
  <xs:element name="getRolesAssignedToGroupResponse" type="tns:getRolesAssignedToGroupResponse"></xs:element>
  <xs:element name="getRolesAssignedToUser" type="tns:getRolesAssignedToUser"></xs:element>
  <xs:element name="getRolesAssignedToUserResponse" type="tns:getRolesAssignedToUserResponse"></xs:element>
  <xs:element name="getUsersInGroup" type="tns:getUsersInGroup"></xs:element>
  <xs:element name="getUsersInGroupResponse" type="tns:getUsersInGroupResponse"></xs:element>
  <xs:element name="isLdapUserCredentialsValid" type="tns:isLdapUserCredentialsValid"></xs:element>
  <xs:element name="isLdapUserCredentialsValidResponse" type="tns:isLdapUserCredentialsValidResponse"></xs:element>
  <xs:element name="isUserCredentialsValid" type="tns:isUserCredentialsValid"></xs:element>
  <xs:element name="isUserCredentialsValidResponse" type="tns:isUserCredentialsValidResponse"></xs:element>
  <xs:element name="isUserEntitledTo" type="tns:isUserEntitledTo"></xs:element>
  <xs:element name="isUserEntitledToResponse" type="tns:isUserEntitledToResponse"></xs:element>
  <xs:element name="isUserInGroup" type="tns:isUserInGroup"></xs:element>
  <xs:element name="isUserInGroupResponse" type="tns:isUserInGroupResponse"></xs:element>
  <xs:element name="renameGroup" type="tns:renameGroup"></xs:element>
  <xs:element name="renameGroupResponse" type="tns:renameGroupResponse"></xs:element>
  <xs:element name="renameRole" type="tns:renameRole"></xs:element>
  <xs:element name="renameRoleResponse" type="tns:renameRoleResponse"></xs:element>
  <xs:element name="revokeEntitlementFromRole" type="tns:revokeEntitlementFromRole"></xs:element>
  <xs:element name="revokeEntitlementFromRoleResponse" type="tns:revokeEntitlementFromRoleResponse"></xs:element>
  <xs:element name="revokeRoleFromGroup" type="tns:revokeRoleFromGroup"></xs:element>
  <xs:element name="revokeRoleFromGroupResponse" type="tns:revokeRoleFromGroupResponse"></xs:element>
  <xs:element name="revokeRoleFromUser" type="tns:revokeRoleFromUser"></xs:element>
  <xs:element name="revokeRoleFromUserResponse" type="tns:revokeRoleFromUserResponse"></xs:element>
  <xs:element name="updateUser" type="tns:updateUser"></xs:element>
  <xs:element name="updateUserResponse" type="tns:updateUserResponse"></xs:element>
  <xs:complexType name="deleteUserFromGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="groupName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteUserFromGroupResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteEntitlement">
    <xs:sequence>
      <xs:element minOccurs="0" name="entitlementName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteEntitlementResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="addGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addGroupResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="assignRoleToUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="roleName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="assignRoleToUserResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupsContainingUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getGroupsContainingUserResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:group"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="group">
    <xs:sequence>
      <xs:element name="id" type="xs:long"></xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUsers">
    <xs:sequence>
      <xs:element minOccurs="0" name="userNamePattern" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUsersResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:user"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="user">
    <xs:sequence>
      <xs:element name="id" type="xs:long"></xs:element>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="passwordCypher" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="firstName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="lastName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="ldapUid" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteGroupResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="getUsersInGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getUsersInGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:user"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="user" type="tns:user"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addUserResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="isLdapUserCredentialsValid">
    <xs:sequence>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="password" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isLdapUserCredentialsValidResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="control">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType final="extension restriction" name="resultCode">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="clearDatabase">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="clearDatabaseResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="addEntitlement">
    <xs:sequence>
      <xs:element minOccurs="0" name="entitlementName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addEntitlementResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="findRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="roleName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findRoleResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:role"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="role">
    <xs:sequence>
      <xs:element name="id" type="xs:long"></xs:element>
      <xs:element minOccurs="0" name="name" type="xs:string"></xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entitlements" nillable="true" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRolesAssignedToUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRolesAssignedToUserResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:role"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="revokeEntitlementFromRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="entitlement" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="roleName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="revokeEntitlementFromRoleResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="findGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findGroupResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:group"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findGroups">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupNamePattern" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findGroupsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:group"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPasswordCypher">
    <xs:sequence>
      <xs:element minOccurs="0" name="password" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getPasswordCypherResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isUserEntitledTo">
    <xs:sequence>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="entitlement" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isUserEntitledToResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEntitlementsAssignedToRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="RoleName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEntitlementsAssignedToRoleResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findEntitlements">
    <xs:sequence>
      <xs:element minOccurs="0" name="entitlementNamePattern" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findEntitlementsResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRolesAssignedToGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getRolesAssignedToGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:role"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isUserInGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="groupName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isUserInGroupResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findGroupNames">
    <xs:sequence>
      <xs:element minOccurs="0" name="groupNamePattern" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findGroupNamesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="renameRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="oldName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="newName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="renameRoleResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEntitlementsEffectivelyAssignedToUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getEntitlementsEffectivelyAssignedToUserResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isUserCredentialsValid">
    <xs:sequence>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="password" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="isUserCredentialsValidResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="roleName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addRoleResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="findRoleNames">
    <xs:sequence>
      <xs:element minOccurs="0" name="roleNamePattern" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findRoleNamesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteUserResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUserNames">
    <xs:sequence>
      <xs:element minOccurs="0" name="userNamePattern" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUserNamesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addUserToGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="groupName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addUserToGroupResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="assignRoleToGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="roleName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="groupName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="assignRoleToGroupResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="assignEntitlementToRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="entitlement" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="roleName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="assignEntitlementToRoleResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="revokeRoleFromUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="roleName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="revokeRoleFromUserResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="userName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findUserResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:user"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findLdapUsers">
    <xs:sequence>
      <xs:element minOccurs="0" name="userNamePattern" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findLdapUsersResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:user"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteRole">
    <xs:sequence>
      <xs:element minOccurs="0" name="roleName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="deleteRoleResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="findRoles">
    <xs:sequence>
      <xs:element minOccurs="0" name="roleNamePattern" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="findRolesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:role"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="renameGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="oldName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="newName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="renameGroupResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="revokeRoleFromGroup">
    <xs:sequence>
      <xs:element minOccurs="0" name="roleName" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="groupName" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="revokeRoleFromGroupResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateUser">
    <xs:sequence>
      <xs:element minOccurs="0" name="user" type="tns:user"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateUserResponse">
    <xs:sequence></xs:sequence>
  </xs:complexType>
  <xs:element name="RecordNotUniqueException" type="tns:RecordNotUniqueException"></xs:element>
  <xs:complexType name="RecordNotUniqueException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RecordNotFoundException" type="tns:RecordNotFoundException"></xs:element>
  <xs:complexType name="RecordNotFoundException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RecordExistsException" type="tns:RecordExistsException"></xs:element>
  <xs:complexType name="RecordExistsException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LDAPException" type="tns:LDAPException"></xs:element>
  <xs:complexType name="LDAPException">
    <xs:sequence>
      <xs:element minOccurs="0" name="diagnosticMessage" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="exceptionMessage" type="xs:string"></xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="responseControls" type="tns:control"></xs:element>
      <xs:element minOccurs="0" name="matchedDN" type="xs:string"></xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="referralURLs" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="exceptionMessage" type="xs:string"></xs:element>
      <xs:element minOccurs="0" name="resultCode" type="tns:resultCode"></xs:element>
      <xs:element minOccurs="0" name="message" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GeneralSecurityException" type="tns:GeneralSecurityException"></xs:element>
  <xs:complexType name="GeneralSecurityException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="NoSuchAlgorithmException" type="tns:NoSuchAlgorithmException"></xs:element>
  <xs:complexType name="NoSuchAlgorithmException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="InvalidKeySpecException" type="tns:InvalidKeySpecException"></xs:element>
  <xs:complexType name="InvalidKeySpecException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"></xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="findRolesResponse">
    <wsdl:part element="tns:findRolesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUserResponse">
    <wsdl:part element="tns:findUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteEntitlement">
    <wsdl:part element="tns:deleteEntitlement" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserResponse">
    <wsdl:part element="tns:addUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addGroup">
    <wsdl:part element="tns:addGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="assignRoleToUser">
    <wsdl:part element="tns:assignRoleToUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUsers">
    <wsdl:part element="tns:findUsers" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGroup">
    <wsdl:part element="tns:deleteGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersInGroup">
    <wsdl:part element="tns:getUsersInGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findGroupsResponse">
    <wsdl:part element="tns:findGroupsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isLdapUserCredentialsValid">
    <wsdl:part element="tns:isLdapUserCredentialsValid" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEntitlementsEffectivelyAssignedToUserResponse">
    <wsdl:part element="tns:getEntitlementsEffectivelyAssignedToUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="clearDatabase">
    <wsdl:part element="tns:clearDatabase" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addEntitlement">
    <wsdl:part element="tns:addEntitlement" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findRole">
    <wsdl:part element="tns:findRole" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUserNamesResponse">
    <wsdl:part element="tns:findUserNamesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="revokeEntitlementFromRole">
    <wsdl:part element="tns:revokeEntitlementFromRole" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUsersResponse">
    <wsdl:part element="tns:findUsersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findGroups">
    <wsdl:part element="tns:findGroups" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserEntitledTo">
    <wsdl:part element="tns:isUserEntitledTo" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEntitlementsAssignedToRoleResponse">
    <wsdl:part element="tns:getEntitlementsAssignedToRoleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRoleResponse">
    <wsdl:part element="tns:deleteRoleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="assignEntitlementToRoleResponse">
    <wsdl:part element="tns:assignEntitlementToRoleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEntitlementsAssignedToRole">
    <wsdl:part element="tns:getEntitlementsAssignedToRole" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findEntitlements">
    <wsdl:part element="tns:findEntitlements" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserToGroupResponse">
    <wsdl:part element="tns:addUserToGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserInGroupResponse">
    <wsdl:part element="tns:isUserInGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolesAssignedToGroup">
    <wsdl:part element="tns:getRolesAssignedToGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addGroupResponse">
    <wsdl:part element="tns:addGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="assignRoleToUserResponse">
    <wsdl:part element="tns:assignRoleToUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserCredentialsValid">
    <wsdl:part element="tns:isUserCredentialsValid" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUserResponse">
    <wsdl:part element="tns:deleteUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="assignRoleToGroupResponse">
    <wsdl:part element="tns:assignRoleToGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserToGroup">
    <wsdl:part element="tns:addUserToGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="assignEntitlementToRole">
    <wsdl:part element="tns:assignEntitlementToRole" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findLdapUsers">
    <wsdl:part element="tns:findLdapUsers" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findLdapUsersResponse">
    <wsdl:part element="tns:findLdapUsersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRole">
    <wsdl:part element="tns:deleteRole" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findRoles">
    <wsdl:part element="tns:findRoles" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="revokeRoleFromUserResponse">
    <wsdl:part element="tns:revokeRoleFromUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="renameGroup">
    <wsdl:part element="tns:renameGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateUser">
    <wsdl:part element="tns:updateUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUserFromGroup">
    <wsdl:part element="tns:deleteUserFromGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUserFromGroupResponse">
    <wsdl:part element="tns:deleteUserFromGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addEntitlementResponse">
    <wsdl:part element="tns:addEntitlementResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserEntitledToResponse">
    <wsdl:part element="tns:isUserEntitledToResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isLdapUserCredentialsValidResponse">
    <wsdl:part element="tns:isLdapUserCredentialsValidResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateUserResponse">
    <wsdl:part element="tns:updateUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="revokeRoleFromGroupResponse">
    <wsdl:part element="tns:revokeRoleFromGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupsContainingUser">
    <wsdl:part element="tns:getGroupsContainingUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGroupResponse">
    <wsdl:part element="tns:deleteGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="clearDatabaseResponse">
    <wsdl:part element="tns:clearDatabaseResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersInGroupResponse">
    <wsdl:part element="tns:getUsersInGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="revokeEntitlementFromRoleResponse">
    <wsdl:part element="tns:revokeEntitlementFromRoleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidKeySpecException">
    <wsdl:part element="tns:InvalidKeySpecException" name="InvalidKeySpecException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findRoleResponse">
    <wsdl:part element="tns:findRoleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUser">
    <wsdl:part element="tns:addUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupsContainingUserResponse">
    <wsdl:part element="tns:getGroupsContainingUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RecordExistsException">
    <wsdl:part element="tns:RecordExistsException" name="RecordExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RecordNotUniqueException">
    <wsdl:part element="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findEntitlementsResponse">
    <wsdl:part element="tns:findEntitlementsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolesAssignedToUser">
    <wsdl:part element="tns:getRolesAssignedToUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteEntitlementResponse">
    <wsdl:part element="tns:deleteEntitlementResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findGroup">
    <wsdl:part element="tns:findGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="renameGroupResponse">
    <wsdl:part element="tns:renameGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPasswordCypher">
    <wsdl:part element="tns:getPasswordCypher" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addRoleResponse">
    <wsdl:part element="tns:addRoleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="NoSuchAlgorithmException">
    <wsdl:part element="tns:NoSuchAlgorithmException" name="NoSuchAlgorithmException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="LDAPException">
    <wsdl:part element="tns:LDAPException" name="LDAPException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RecordNotFoundException">
    <wsdl:part element="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserInGroup">
    <wsdl:part element="tns:isUserInGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findGroupNames">
    <wsdl:part element="tns:findGroupNames" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findGroupResponse">
    <wsdl:part element="tns:findGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="renameRole">
    <wsdl:part element="tns:renameRole" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="renameRoleResponse">
    <wsdl:part element="tns:renameRoleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEntitlementsEffectivelyAssignedToUser">
    <wsdl:part element="tns:getEntitlementsEffectivelyAssignedToUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addRole">
    <wsdl:part element="tns:addRole" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findRoleNames">
    <wsdl:part element="tns:findRoleNames" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUser">
    <wsdl:part element="tns:deleteUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findRoleNamesResponse">
    <wsdl:part element="tns:findRoleNamesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUserNames">
    <wsdl:part element="tns:findUserNames" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserCredentialsValidResponse">
    <wsdl:part element="tns:isUserCredentialsValidResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="assignRoleToGroup">
    <wsdl:part element="tns:assignRoleToGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GeneralSecurityException">
    <wsdl:part element="tns:GeneralSecurityException" name="GeneralSecurityException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="revokeRoleFromUser">
    <wsdl:part element="tns:revokeRoleFromUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUser">
    <wsdl:part element="tns:findUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolesAssignedToGroupResponse">
    <wsdl:part element="tns:getRolesAssignedToGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolesAssignedToUserResponse">
    <wsdl:part element="tns:getRolesAssignedToUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPasswordCypherResponse">
    <wsdl:part element="tns:getPasswordCypherResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findGroupNamesResponse">
    <wsdl:part element="tns:findGroupNamesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="revokeRoleFromGroup">
    <wsdl:part element="tns:revokeRoleFromGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="AccessControllerWebService">
    <wsdl:operation name="deleteUserFromGroup">
      <wsdl:input message="tns:deleteUserFromGroup" name="deleteUserFromGroup">
    </wsdl:input>
      <wsdl:output message="tns:deleteUserFromGroupResponse" name="deleteUserFromGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteEntitlement">
      <wsdl:input message="tns:deleteEntitlement" name="deleteEntitlement">
    </wsdl:input>
      <wsdl:output message="tns:deleteEntitlementResponse" name="deleteEntitlementResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addGroup">
      <wsdl:input message="tns:addGroup" name="addGroup">
    </wsdl:input>
      <wsdl:output message="tns:addGroupResponse" name="addGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordExistsException" name="RecordExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="assignRoleToUser">
      <wsdl:input message="tns:assignRoleToUser" name="assignRoleToUser">
    </wsdl:input>
      <wsdl:output message="tns:assignRoleToUserResponse" name="assignRoleToUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroupsContainingUser">
      <wsdl:input message="tns:getGroupsContainingUser" name="getGroupsContainingUser">
    </wsdl:input>
      <wsdl:output message="tns:getGroupsContainingUserResponse" name="getGroupsContainingUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUsers">
      <wsdl:input message="tns:findUsers" name="findUsers">
    </wsdl:input>
      <wsdl:output message="tns:findUsersResponse" name="findUsersResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteGroup">
      <wsdl:input message="tns:deleteGroup" name="deleteGroup">
    </wsdl:input>
      <wsdl:output message="tns:deleteGroupResponse" name="deleteGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUsersInGroup">
      <wsdl:input message="tns:getUsersInGroup" name="getUsersInGroup">
    </wsdl:input>
      <wsdl:output message="tns:getUsersInGroupResponse" name="getUsersInGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdl:input message="tns:addUser" name="addUser">
    </wsdl:input>
      <wsdl:output message="tns:addUserResponse" name="addUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordExistsException" name="RecordExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isLdapUserCredentialsValid">
      <wsdl:input message="tns:isLdapUserCredentialsValid" name="isLdapUserCredentialsValid">
    </wsdl:input>
      <wsdl:output message="tns:isLdapUserCredentialsValidResponse" name="isLdapUserCredentialsValidResponse">
    </wsdl:output>
      <wsdl:fault message="tns:LDAPException" name="LDAPException">
    </wsdl:fault>
      <wsdl:fault message="tns:GeneralSecurityException" name="GeneralSecurityException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearDatabase">
      <wsdl:input message="tns:clearDatabase" name="clearDatabase">
    </wsdl:input>
      <wsdl:output message="tns:clearDatabaseResponse" name="clearDatabaseResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addEntitlement">
      <wsdl:input message="tns:addEntitlement" name="addEntitlement">
    </wsdl:input>
      <wsdl:output message="tns:addEntitlementResponse" name="addEntitlementResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findRole">
      <wsdl:input message="tns:findRole" name="findRole">
    </wsdl:input>
      <wsdl:output message="tns:findRoleResponse" name="findRoleResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolesAssignedToUser">
      <wsdl:input message="tns:getRolesAssignedToUser" name="getRolesAssignedToUser">
    </wsdl:input>
      <wsdl:output message="tns:getRolesAssignedToUserResponse" name="getRolesAssignedToUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="revokeEntitlementFromRole">
      <wsdl:input message="tns:revokeEntitlementFromRole" name="revokeEntitlementFromRole">
    </wsdl:input>
      <wsdl:output message="tns:revokeEntitlementFromRoleResponse" name="revokeEntitlementFromRoleResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findGroup">
      <wsdl:input message="tns:findGroup" name="findGroup">
    </wsdl:input>
      <wsdl:output message="tns:findGroupResponse" name="findGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findGroups">
      <wsdl:input message="tns:findGroups" name="findGroups">
    </wsdl:input>
      <wsdl:output message="tns:findGroupsResponse" name="findGroupsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPasswordCypher">
      <wsdl:input message="tns:getPasswordCypher" name="getPasswordCypher">
    </wsdl:input>
      <wsdl:output message="tns:getPasswordCypherResponse" name="getPasswordCypherResponse">
    </wsdl:output>
      <wsdl:fault message="tns:NoSuchAlgorithmException" name="NoSuchAlgorithmException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidKeySpecException" name="InvalidKeySpecException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserEntitledTo">
      <wsdl:input message="tns:isUserEntitledTo" name="isUserEntitledTo">
    </wsdl:input>
      <wsdl:output message="tns:isUserEntitledToResponse" name="isUserEntitledToResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementsAssignedToRole">
      <wsdl:input message="tns:getEntitlementsAssignedToRole" name="getEntitlementsAssignedToRole">
    </wsdl:input>
      <wsdl:output message="tns:getEntitlementsAssignedToRoleResponse" name="getEntitlementsAssignedToRoleResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findEntitlements">
      <wsdl:input message="tns:findEntitlements" name="findEntitlements">
    </wsdl:input>
      <wsdl:output message="tns:findEntitlementsResponse" name="findEntitlementsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesAssignedToGroup">
      <wsdl:input message="tns:getRolesAssignedToGroup" name="getRolesAssignedToGroup">
    </wsdl:input>
      <wsdl:output message="tns:getRolesAssignedToGroupResponse" name="getRolesAssignedToGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserInGroup">
      <wsdl:input message="tns:isUserInGroup" name="isUserInGroup">
    </wsdl:input>
      <wsdl:output message="tns:isUserInGroupResponse" name="isUserInGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findGroupNames">
      <wsdl:input message="tns:findGroupNames" name="findGroupNames">
    </wsdl:input>
      <wsdl:output message="tns:findGroupNamesResponse" name="findGroupNamesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renameRole">
      <wsdl:input message="tns:renameRole" name="renameRole">
    </wsdl:input>
      <wsdl:output message="tns:renameRoleResponse" name="renameRoleResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementsEffectivelyAssignedToUser">
      <wsdl:input message="tns:getEntitlementsEffectivelyAssignedToUser" name="getEntitlementsEffectivelyAssignedToUser">
    </wsdl:input>
      <wsdl:output message="tns:getEntitlementsEffectivelyAssignedToUserResponse" name="getEntitlementsEffectivelyAssignedToUserResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isUserCredentialsValid">
      <wsdl:input message="tns:isUserCredentialsValid" name="isUserCredentialsValid">
    </wsdl:input>
      <wsdl:output message="tns:isUserCredentialsValidResponse" name="isUserCredentialsValidResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:LDAPException" name="LDAPException">
    </wsdl:fault>
      <wsdl:fault message="tns:GeneralSecurityException" name="GeneralSecurityException">
    </wsdl:fault>
      <wsdl:fault message="tns:NoSuchAlgorithmException" name="NoSuchAlgorithmException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidKeySpecException" name="InvalidKeySpecException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <wsdl:input message="tns:addRole" name="addRole">
    </wsdl:input>
      <wsdl:output message="tns:addRoleResponse" name="addRoleResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordExistsException" name="RecordExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findRoleNames">
      <wsdl:input message="tns:findRoleNames" name="findRoleNames">
    </wsdl:input>
      <wsdl:output message="tns:findRoleNamesResponse" name="findRoleNamesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="tns:deleteUser" name="deleteUser">
    </wsdl:input>
      <wsdl:output message="tns:deleteUserResponse" name="deleteUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUserNames">
      <wsdl:input message="tns:findUserNames" name="findUserNames">
    </wsdl:input>
      <wsdl:output message="tns:findUserNamesResponse" name="findUserNamesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserToGroup">
      <wsdl:input message="tns:addUserToGroup" name="addUserToGroup">
    </wsdl:input>
      <wsdl:output message="tns:addUserToGroupResponse" name="addUserToGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="assignRoleToGroup">
      <wsdl:input message="tns:assignRoleToGroup" name="assignRoleToGroup">
    </wsdl:input>
      <wsdl:output message="tns:assignRoleToGroupResponse" name="assignRoleToGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="assignEntitlementToRole">
      <wsdl:input message="tns:assignEntitlementToRole" name="assignEntitlementToRole">
    </wsdl:input>
      <wsdl:output message="tns:assignEntitlementToRoleResponse" name="assignEntitlementToRoleResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="revokeRoleFromUser">
      <wsdl:input message="tns:revokeRoleFromUser" name="revokeRoleFromUser">
    </wsdl:input>
      <wsdl:output message="tns:revokeRoleFromUserResponse" name="revokeRoleFromUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUser">
      <wsdl:input message="tns:findUser" name="findUser">
    </wsdl:input>
      <wsdl:output message="tns:findUserResponse" name="findUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findLdapUsers">
      <wsdl:input message="tns:findLdapUsers" name="findLdapUsers">
    </wsdl:input>
      <wsdl:output message="tns:findLdapUsersResponse" name="findLdapUsersResponse">
    </wsdl:output>
      <wsdl:fault message="tns:LDAPException" name="LDAPException">
    </wsdl:fault>
      <wsdl:fault message="tns:GeneralSecurityException" name="GeneralSecurityException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <wsdl:input message="tns:deleteRole" name="deleteRole">
    </wsdl:input>
      <wsdl:output message="tns:deleteRoleResponse" name="deleteRoleResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findRoles">
      <wsdl:input message="tns:findRoles" name="findRoles">
    </wsdl:input>
      <wsdl:output message="tns:findRolesResponse" name="findRolesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renameGroup">
      <wsdl:input message="tns:renameGroup" name="renameGroup">
    </wsdl:input>
      <wsdl:output message="tns:renameGroupResponse" name="renameGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="revokeRoleFromGroup">
      <wsdl:input message="tns:revokeRoleFromGroup" name="revokeRoleFromGroup">
    </wsdl:input>
      <wsdl:output message="tns:revokeRoleFromGroupResponse" name="revokeRoleFromGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUser">
      <wsdl:input message="tns:updateUser" name="updateUser">
    </wsdl:input>
      <wsdl:output message="tns:updateUserResponse" name="updateUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:RecordNotUniqueException" name="RecordNotUniqueException">
    </wsdl:fault>
      <wsdl:fault message="tns:RecordNotFoundException" name="RecordNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AccessControllerWebServiceSoapBinding" type="tns:AccessControllerWebService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"></soap:binding>
    <wsdl:operation name="deleteUserFromGroup">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="deleteUserFromGroup">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="deleteUserFromGroupResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteEntitlement">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="deleteEntitlement">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="deleteEntitlementResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addGroup">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="addGroup">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="addGroupResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordExistsException">
        <soap:fault name="RecordExistsException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="assignRoleToUser">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="assignRoleToUser">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="assignRoleToUserResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroupsContainingUser">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="getGroupsContainingUser">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="getGroupsContainingUserResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUsers">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="findUsers">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findUsersResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteGroup">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="deleteGroup">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="deleteGroupResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUsersInGroup">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="getUsersInGroup">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="getUsersInGroupResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="addUser">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="addUserResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordExistsException">
        <soap:fault name="RecordExistsException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isLdapUserCredentialsValid">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="isLdapUserCredentialsValid">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="isLdapUserCredentialsValidResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="LDAPException">
        <soap:fault name="LDAPException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="GeneralSecurityException">
        <soap:fault name="GeneralSecurityException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearDatabase">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="clearDatabase">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="clearDatabaseResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addEntitlement">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="addEntitlement">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="addEntitlementResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="findRole">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="findRole">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findRoleResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRolesAssignedToUser">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="getRolesAssignedToUser">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="getRolesAssignedToUserResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="revokeEntitlementFromRole">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="revokeEntitlementFromRole">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="revokeEntitlementFromRoleResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findGroup">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="findGroup">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findGroupResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findGroups">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="findGroups">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findGroupsResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPasswordCypher">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="getPasswordCypher">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="getPasswordCypherResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="NoSuchAlgorithmException">
        <soap:fault name="NoSuchAlgorithmException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="InvalidKeySpecException">
        <soap:fault name="InvalidKeySpecException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserEntitledTo">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="isUserEntitledTo">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="isUserEntitledToResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementsAssignedToRole">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="getEntitlementsAssignedToRole">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="getEntitlementsAssignedToRoleResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findEntitlements">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="findEntitlements">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findEntitlementsResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesAssignedToGroup">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="getRolesAssignedToGroup">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="getRolesAssignedToGroupResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserInGroup">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="isUserInGroup">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="isUserInGroupResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findGroupNames">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="findGroupNames">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findGroupNamesResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renameRole">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="renameRole">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="renameRoleResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEntitlementsEffectivelyAssignedToUser">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="getEntitlementsEffectivelyAssignedToUser">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="getEntitlementsEffectivelyAssignedToUserResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isUserCredentialsValid">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="isUserCredentialsValid">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="isUserCredentialsValidResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="LDAPException">
        <soap:fault name="LDAPException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="GeneralSecurityException">
        <soap:fault name="GeneralSecurityException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="NoSuchAlgorithmException">
        <soap:fault name="NoSuchAlgorithmException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="InvalidKeySpecException">
        <soap:fault name="InvalidKeySpecException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="addRole">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="addRoleResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordExistsException">
        <soap:fault name="RecordExistsException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findRoleNames">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="findRoleNames">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findRoleNamesResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="deleteUser">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="deleteUserResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUserNames">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="findUserNames">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findUserNamesResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserToGroup">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="addUserToGroup">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="addUserToGroupResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="assignRoleToGroup">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="assignRoleToGroup">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="assignRoleToGroupResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="assignEntitlementToRole">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="assignEntitlementToRole">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="assignEntitlementToRoleResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="revokeRoleFromUser">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="revokeRoleFromUser">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="revokeRoleFromUserResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUser">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="findUser">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findUserResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findLdapUsers">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="findLdapUsers">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findLdapUsersResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="LDAPException">
        <soap:fault name="LDAPException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="GeneralSecurityException">
        <soap:fault name="GeneralSecurityException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRole">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="deleteRole">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="deleteRoleResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findRoles">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="findRoles">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="findRolesResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renameGroup">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="renameGroup">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="renameGroupResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="revokeRoleFromGroup">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="revokeRoleFromGroup">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="revokeRoleFromGroupResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUser">
      <soap:operation soapAction="" style="document"></soap:operation>
      <wsdl:input name="updateUser">
        <soap:body use="literal"></soap:body>
      </wsdl:input>
      <wsdl:output name="updateUserResponse">
        <soap:body use="literal"></soap:body>
      </wsdl:output>
      <wsdl:fault name="RecordNotUniqueException">
        <soap:fault name="RecordNotUniqueException" use="literal"></soap:fault>
      </wsdl:fault>
      <wsdl:fault name="RecordNotFoundException">
        <soap:fault name="RecordNotFoundException" use="literal"></soap:fault>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AccessControllerWebService">
    <wsdl:port binding="tns:AccessControllerWebServiceSoapBinding" name="AccessControllerWebServicePort">
      <soap:address location="https://localhost:8443/OlspsAccessControlApi-3.7.0/AccessControllerWebService/AccessControllerWebService"></soap:address>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>